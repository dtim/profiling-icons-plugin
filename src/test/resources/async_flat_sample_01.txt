--- Execution profile ---
Total samples       : 8723

--- 49462082985 ns (56.70%), 4946 samples
  [ 0] com.comitative.pt.Matrix.multiply_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 5770213383 ns (6.61%), 577 samples
  [ 0] com.comitative.pt.Matrix.getElement_[j]
  [ 1] com.comitative.pt.Matrix.multiply_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 4270280415 ns (4.89%), 427 samples
  [ 0] com.comitative.pt.MainKt.main_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]

--- 4020365757 ns (4.61%), 402 samples
  [ 0] com.comitative.pt.Transform.matrixToPoint_[j]
  [ 1] com.comitative.pt.Transform.transform_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 2130045166 ns (2.44%), 213 samples
  [ 0] com.comitative.pt.Matrix.multiply_[j]
  [ 1] com.comitative.pt.Transform.transform_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 2110075676 ns (2.42%), 211 samples
  [ 0] com.comitative.pt.Matrix.getElement_[j]
  [ 1] com.comitative.pt.Transform.matrixToPoint_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 1810061398 ns (2.07%), 181 samples
  [ 0] com.comitative.pt.Point.length_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 1719994996 ns (1.97%), 172 samples
  [ 0] com.comitative.pt.MainKt.main_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]

--- 1500167116 ns (1.72%), 150 samples
  [ 0] com.comitative.pt.MainKt.main_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]

--- 1460054320 ns (1.67%), 146 samples
  [ 0] java.lang.Double.equals_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 1060074794 ns (1.22%), 106 samples
  [ 0] kotlin.random.RandomKt.takeUpperBits_[j]
  [ 1] kotlin.random.XorWowRandom.nextBits_[j]
  [ 2] kotlin.random.Random.nextDouble_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 960085156 ns (1.10%), 96 samples
  [ 0] java.lang.Double.equals_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 740019594 ns (0.85%), 74 samples
  [ 0] com.comitative.pt.Matrix.getElement_[j]
  [ 1] com.comitative.pt.Matrix.multiply_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 680075158 ns (0.78%), 68 samples
  [ 0] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 1] com.comitative.pt.Transform.transform_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 660008819 ns (0.76%), 66 samples
  [ 0] java.lang.Double.<init>_[j]
  [ 1] java.lang.Double.valueOf_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 590000371 ns (0.68%), 59 samples
  [ 0] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 1] com.comitative.pt.Transform.transform_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 470026921 ns (0.54%), 47 samples
  [ 0] com.comitative.pt.MainKt.main_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]

--- 470013476 ns (0.54%), 47 samples
  [ 0] com.comitative.pt.Matrix.getElement_[j]
  [ 1] com.comitative.pt.Transform.matrixToPoint_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 449997690 ns (0.52%), 45 samples
  [ 0] com.comitative.pt.Transform.transform_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 430036837 ns (0.49%), 43 samples
  [ 0] com.comitative.pt.Matrix.multiply_[j]
  [ 1] com.comitative.pt.Transform.transform_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 420007505 ns (0.48%), 42 samples
  [ 0] com.comitative.pt.Matrix.getElement_[j]
  [ 1] com.comitative.pt.Matrix.multiply_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 420006065 ns (0.48%), 42 samples
  [ 0] java.lang.Double.equals_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 400016283 ns (0.46%), 40 samples
  [ 0] java.lang.Object.<init>_[j]
  [ 1] java.lang.Number.<init>_[j]
  [ 2] java.lang.Double.<init>_[j]
  [ 3] java.lang.Double.valueOf_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]
  [ 5] com.comitative.pt.MainKt.main_[j]

--- 350001638 ns (0.40%), 35 samples
  [ 0] com.comitative.pt.Matrix.setElement_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 330022146 ns (0.38%), 33 samples
  [ 0] com.comitative.pt.Matrix.setElement_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 290012429 ns (0.33%), 29 samples
  [ 0] java.lang.Double.<init>_[j]
  [ 1] java.lang.Double.valueOf_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 270036686 ns (0.31%), 27 samples
  [ 0] com.comitative.pt.Matrix.getElement_[j]
  [ 1] com.comitative.pt.Transform.matrixToPoint_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 270014009 ns (0.31%), 27 samples
  [ 0] java.lang.Double.equals_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 250026114 ns (0.29%), 25 samples
  [ 0] com.comitative.pt.Matrix.multiply_[j]
  [ 1] com.comitative.pt.Transform.transform_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 240007434 ns (0.28%), 24 samples
  [ 0] com.comitative.pt.MainKt.main_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]

--- 210023385 ns (0.24%), 21 samples
  [ 0] com.comitative.pt.Matrix.<init>_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 210017346 ns (0.24%), 21 samples
  [ 0] com.comitative.pt.Matrix.getElement_[j]
  [ 1] com.comitative.pt.Matrix.multiply_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 201602356 ns (0.23%), 20 samples
  [ 0] SpinPause
  [ 1] StealTask::do_it(GCTaskManager*, unsigned int)
  [ 2] GCTaskThread::run()
  [ 3] java_start(Thread*)
  [ 4] start_thread

--- 200021676 ns (0.23%), 20 samples
  [ 0] java.lang.Double.valueOf_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 190027133 ns (0.22%), 19 samples
  [ 0] java.lang.Double.equals_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]

--- 170015310 ns (0.19%), 17 samples
  [ 0] com.comitative.pt.MainKt.main_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]

--- 160018938 ns (0.18%), 16 samples
  [ 0] com.comitative.pt.Matrix.setElement_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 140010885 ns (0.16%), 14 samples
  [ 0] com.comitative.pt.Matrix.setElement_[j]
  [ 1] com.comitative.pt.Matrix.multiply_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 140009468 ns (0.16%), 14 samples
  [ 0] com.comitative.pt.Matrix.<init>_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 90726080 ns (0.10%), 9 samples
  [ 0] ParallelTaskTerminator::offer_termination(TerminatorTerminator*)
  [ 1] StealTask::do_it(GCTaskManager*, unsigned int)
  [ 2] GCTaskThread::run()
  [ 3] java_start(Thread*)
  [ 4] start_thread

--- 90335442 ns (0.10%), 9 samples
  [ 0] StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, BasicHashtable<(MemoryType)9>::BucketUnlinkContext*)
  [ 1] StringTable::unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int*, int*)
  [ 2] PSScavenge::invoke_no_policy()
  [ 3] PSScavenge::invoke()
  [ 4] ParallelScavengeHeap::failed_mem_allocate(unsigned long)
  [ 5] VM_ParallelGCFailedAllocation::doit()
  [ 6] VM_Operation::evaluate()
  [ 7] VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0]
  [ 8] VMThread::loop()
  [ 9] VMThread::run()
  [10] java_start(Thread*)
  [11] start_thread

--- 80566116 ns (0.09%), 8 samples
  [ 0] CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int)
  [ 1] OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int)
  [ 2] GCTaskThread::run()
  [ 3] java_start(Thread*)
  [ 4] start_thread

--- 79996924 ns (0.09%), 8 samples
  [ 0] com.comitative.pt.Matrix.<init>_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 50020842 ns (0.06%), 5 samples
  [ 0] com.comitative.pt.Matrix.<init>_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 50019640 ns (0.06%), 5 samples
  [ 0] clear_page_erms_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_nodemask_[k]
  [ 3] alloc_pages_vma_[k]
  [ 4] do_anonymous_page_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] com.comitative.pt.Transform.pointToMatrix_[j]
  [11] com.comitative.pt.Transform.transform_[j]
  [12] com.comitative.pt.MainKt.main_[j]
  [13] com.comitative.pt.MainKt.main_[j]

--- 50004631 ns (0.06%), 5 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] com.comitative.pt.Matrix.getElement_[j]
  [ 4] com.comitative.pt.Transform.matrixToPoint_[j]
  [ 5] com.comitative.pt.Transform.transform_[j]
  [ 6] com.comitative.pt.MainKt.main_[j]
  [ 7] com.comitative.pt.MainKt.main_[j]

--- 50003845 ns (0.06%), 5 samples
  [ 0] com.comitative.pt.MainKt.main_[j]
  [ 1] com.comitative.pt.MainKt.main_[j]

--- 50001333 ns (0.06%), 5 samples
  [ 0] com.comitative.pt.Matrix.setElement_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 40323390 ns (0.05%), 4 samples
  [ 0] ObjectStartArray::object_starts_in_range(HeapWord*, HeapWord*) const
  [ 1] OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int)
  [ 2] GCTaskThread::run()
  [ 3] java_start(Thread*)
  [ 4] start_thread

--- 40000717 ns (0.05%), 4 samples
  [ 0] com.comitative.pt.Matrix.multiply_[j]
  [ 1] com.comitative.pt.Transform.transform_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 30302442 ns (0.03%), 3 samples
  [ 0] __lock_text_start_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __pthread_cond_signal

--- 30247982 ns (0.03%), 3 samples
  [ 0] PSScavengeKlassClosure::do_klass(Klass*)
  [ 1] ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool)
  [ 2] ScavengeRootsTask::do_it(GCTaskManager*, unsigned int)
  [ 3] GCTaskThread::run()
  [ 4] java_start(Thread*)
  [ 5] start_thread

--- 30224595 ns (0.03%), 3 samples
  [ 0] futex_wait_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __pthread_cond_wait
  [ 6] [unknown]

--- 30002130 ns (0.03%), 3 samples
  [ 0] __lock_text_start_[k]
  [ 1] pagevec_lru_move_fn_[k]
  [ 2] lru_cache_add_[k]
  [ 3] lru_cache_add_active_or_unevictable_[k]
  [ 4] do_anonymous_page_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] com.comitative.pt.Matrix.getElement_[j]
  [11] com.comitative.pt.Transform.matrixToPoint_[j]
  [12] com.comitative.pt.Transform.transform_[j]
  [13] com.comitative.pt.MainKt.main_[j]
  [14] com.comitative.pt.MainKt.main_[j]

--- 20003396 ns (0.02%), 2 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*) [clone .part.0]
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] start_thread

--- 20002491 ns (0.02%), 2 samples
  [ 0] __lock_text_start_[k]
  [ 1] pagevec_lru_move_fn_[k]
  [ 2] lru_cache_add_[k]
  [ 3] lru_cache_add_active_or_unevictable_[k]
  [ 4] do_anonymous_page_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] com.comitative.pt.Transform.pointToMatrix_[j]
  [11] com.comitative.pt.Transform.transform_[j]
  [12] com.comitative.pt.MainKt.main_[j]
  [13] com.comitative.pt.MainKt.main_[j]

--- 20002327 ns (0.02%), 2 samples
  [ 0] clear_page_erms_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_nodemask_[k]
  [ 3] alloc_pages_vma_[k]
  [ 4] do_anonymous_page_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] com.comitative.pt.MainKt.main_[j]
  [11] com.comitative.pt.MainKt.main_[j]

--- 20002201 ns (0.02%), 2 samples
  [ 0] do_user_addr_fault_[k]
  [ 1] exc_page_fault_[k]
  [ 2] asm_exc_page_fault_[k]
  [ 3] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 4] com.comitative.pt.Transform.transform_[j]
  [ 5] com.comitative.pt.MainKt.main_[j]
  [ 6] com.comitative.pt.MainKt.main_[j]

--- 20002042 ns (0.02%), 2 samples
  [ 0] com.comitative.pt.Matrix.setElement_[j]
  [ 1] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 20001771 ns (0.02%), 2 samples
  [ 0] __lock_text_start_[k]
  [ 1] pagevec_lru_move_fn_[k]
  [ 2] lru_cache_add_[k]
  [ 3] lru_cache_add_active_or_unevictable_[k]
  [ 4] do_anonymous_page_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] com.comitative.pt.MainKt.main_[j]
  [11] com.comitative.pt.MainKt.main_[j]

--- 20001718 ns (0.02%), 2 samples
  [ 0] com.comitative.pt.Matrix.setElement_[j]
  [ 1] com.comitative.pt.Matrix.multiply_[j]
  [ 2] com.comitative.pt.MainKt.main_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]

--- 10263454 ns (0.01%), 1 sample
  [ 0] MutableSpaceUsedHelper::take_sample()
  [ 1] StatSamplerTask::task()
  [ 2] PeriodicTask::real_time_tick(int)
  [ 3] WatcherThread::run()
  [ 4] java_start(Thread*)
  [ 5] start_thread

--- 10260710 ns (0.01%), 1 sample
  [ 0] clock_gettime
  [ 1] WatcherThread::sleep() const
  [ 2] WatcherThread::run()
  [ 3] java_start(Thread*)
  [ 4] start_thread

--- 10257718 ns (0.01%), 1 sample
  [ 0] __lock_text_start_[k]
  [ 1] hrtimer_start_range_ns_[k]
  [ 2] hrtimer_sleeper_start_expires_[k]
  [ 3] futex_wait_queue_me_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] pthread_cond_timedwait@@GLIBC_2.3.2
  [10] [unknown]

--- 10099258 ns (0.01%), 1 sample
  [ 0] Monitor::IUnlock(bool)
  [ 1] Monitor::IWait(Thread*, long)
  [ 2] Monitor::wait(bool, long, bool)
  [ 3] GCTaskManager::get_task(unsigned int)
  [ 4] GCTaskThread::run()
  [ 5] java_start(Thread*)
  [ 6] start_thread

--- 10088116 ns (0.01%), 1 sample
  [ 0] os::PlatformEvent::park()
  [ 1] Monitor::wait(bool, long, bool)
  [ 2] GCTaskManager::get_task(unsigned int)
  [ 3] GCTaskThread::run()
  [ 4] java_start(Thread*)
  [ 5] start_thread

--- 10082541 ns (0.01%), 1 sample
  [ 0] finish_task_switch_[k]
  [ 1] __sched_text_start_[k]
  [ 2] schedule_[k]
  [ 3] futex_wait_queue_me_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __pthread_cond_wait
  [10] [unknown]

--- 10080557 ns (0.01%), 1 sample
  [ 0] do_syscall_64_[k]
  [ 1] entry_SYSCALL_64_after_hwframe_[k]
  [ 2] __pthread_mutex_unlock
  [ 3] Monitor::IWait(Thread*, long)
  [ 4] Monitor::wait(bool, long, bool)
  [ 5] GCTaskManager::get_task(unsigned int)
  [ 6] GCTaskThread::run()
  [ 7] java_start(Thread*)
  [ 8] start_thread

--- 10080403 ns (0.01%), 1 sample
  [ 0] __pthread_cond_wait
  [ 1] [unknown]

--- 10079177 ns (0.01%), 1 sample
  [ 0] InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*)
  [ 1] oopDesc* PSPromotionManager::copy_to_survivor_space<false>(oopDesc*)
  [ 2] PSRootsClosure<false>::do_oop(oopDesc**)
  [ 3] OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*)
  [ 4] frame::oops_do_internal(OopClosure*, CLDClosure*, CodeBlobClosure*, RegisterMap*, bool)
  [ 5] JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*)
  [ 6] ThreadRootsTask::do_it(GCTaskManager*, unsigned int)
  [ 7] GCTaskThread::run()
  [ 8] java_start(Thread*)
  [ 9] start_thread

--- 10078344 ns (0.01%), 1 sample
  [ 0] __pthread_cond_signal

--- 10074021 ns (0.01%), 1 sample
  [ 0] do_syscall_64_[k]
  [ 1] entry_SYSCALL_64_after_hwframe_[k]
  [ 2] __pthread_mutex_unlock
  [ 3] Monitor::IWait(Thread*, long)
  [ 4] Monitor::wait(bool, long, bool)
  [ 5] CompileQueue::get()
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] start_thread

--- 10066804 ns (0.01%), 1 sample
  [ 0] pthread_mutex_lock
  [ 1] Monitor::IWait(Thread*, long)
  [ 2] Monitor::wait(bool, long, bool)
  [ 3] GCTaskManager::get_task(unsigned int)
  [ 4] GCTaskThread::run()
  [ 5] java_start(Thread*)
  [ 6] start_thread

--- 10053923 ns (0.01%), 1 sample
  [ 0] __prepare_exit_to_usermode_[k]
  [ 1] __noinstr_text_start_[k]
  [ 2] idtentry_exit_cond_rcu_[k]
  [ 3] common_interrupt_[k]
  [ 4] asm_common_interrupt_[k]
  [ 5] com.comitative.pt.MainKt.main_[j]
  [ 6] com.comitative.pt.MainKt.main_[j]

--- 10042466 ns (0.01%), 1 sample
  [ 0] __prepare_exit_to_usermode_[k]
  [ 1] __noinstr_text_start_[k]
  [ 2] idtentry_exit_cond_rcu_[k]
  [ 3] common_interrupt_[k]
  [ 4] asm_common_interrupt_[k]
  [ 5] kotlin.random.RandomKt.takeUpperBits_[j]
  [ 6] kotlin.random.XorWowRandom.nextBits_[j]
  [ 7] kotlin.random.Random.nextDouble_[j]
  [ 8] com.comitative.pt.MainKt.main_[j]
  [ 9] com.comitative.pt.MainKt.main_[j]

--- 10036649 ns (0.01%), 1 sample
  [ 0] ciObjectFactory::get_symbol(Symbol*)
  [ 1] ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&, ciInstanceKlass*)
  [ 2] ciEnv::get_klass_by_index(constantPoolHandle, int, bool&, ciInstanceKlass*)
  [ 3] ciBytecodeStream::get_declared_method_holder()
  [ 4] Parse::do_call()
  [ 5] Parse::do_one_bytecode()
  [ 6] Parse::do_one_block()
  [ 7] Parse::do_all_blocks()
  [ 8] Parse::Parse(JVMState*, ciMethod*, float)
  [ 9] ParseGenerator::generate(JVMState*)
  [10] Parse::do_call()
  [11] Parse::do_one_bytecode()
  [12] Parse::do_one_block()
  [13] Parse::do_all_blocks()
  [14] Parse::Parse(JVMState*, ciMethod*, float)
  [15] ParseGenerator::generate(JVMState*)
  [16] Parse::do_call()
  [17] Parse::do_one_bytecode()
  [18] Parse::do_one_block()
  [19] Parse::do_all_blocks()
  [20] Parse::Parse(JVMState*, ciMethod*, float)
  [21] ParseGenerator::generate(JVMState*)
  [22] Parse::do_call()
  [23] Parse::do_one_bytecode()
  [24] Parse::do_one_block()
  [25] Parse::do_all_blocks()
  [26] Parse::Parse(JVMState*, ciMethod*, float)
  [27] ParseGenerator::generate(JVMState*)
  [28] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [29] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [30] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [31] CompileBroker::compiler_thread_loop()
  [32] JavaThread::thread_main_inner()
  [33] JavaThread::run()
  [34] java_start(Thread*)
  [35] start_thread

--- 10021117 ns (0.01%), 1 sample
  [ 0] PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
  [ 1] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 2] Compile::Optimize()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] start_thread

--- 10021077 ns (0.01%), 1 sample
  [ 0] stringStream::write(char const*, unsigned long)
  [ 1] outputStream::print_cr(char const*, ...)
  [ 2] ParallelScavengeHeap::print_on(outputStream*) const
  [ 3] GCHeapLog::log_heap(bool) [clone .part.0]
  [ 4] PSScavenge::invoke_no_policy()
  [ 5] PSScavenge::invoke()
  [ 6] ParallelScavengeHeap::failed_mem_allocate(unsigned long)
  [ 7] VM_ParallelGCFailedAllocation::doit()
  [ 8] VM_Operation::evaluate()
  [ 9] VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0]
  [10] VMThread::loop()
  [11] VMThread::run()
  [12] java_start(Thread*)
  [13] start_thread

--- 10020980 ns (0.01%), 1 sample
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.31.so
  [ 1] SafepointSynchronize::end()
  [ 2] VMThread::loop()
  [ 3] VMThread::run()
  [ 4] java_start(Thread*)
  [ 5] start_thread

--- 10017668 ns (0.01%), 1 sample
  [ 0] LIR_List::metadata2reg(Metadata*, LIR_OprDesc*)
  [ 1] LIRGenerator::profile_branch(If*, Instruction::Condition)
  [ 2] LIRGenerator::do_If(If*)
  [ 3] non-virtual thunk to LIRGenerator::block_do(BlockBegin*)
  [ 4] BlockList::iterate_forward(BlockClosure*)
  [ 5] Compilation::emit_lir()
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] JavaThread::run()
  [14] java_start(Thread*)
  [15] start_thread

--- 10017070 ns (0.01%), 1 sample
  [ 0] Threads::nmethods_do(CodeBlobClosure*)
  [ 1] NMethodSweeper::mark_active_nmethods()
  [ 2] SafepointSynchronize::do_cleanup_tasks()
  [ 3] SafepointSynchronize::begin()
  [ 4] VMThread::loop()
  [ 5] VMThread::run()
  [ 6] java_start(Thread*)
  [ 7] start_thread

--- 10016325 ns (0.01%), 1 sample
  [ 0] /usr/lib/x86_64-linux-gnu/libc-2.31.so
  [ 1] /usr/lib/x86_64-linux-gnu/libc-2.31.so
  [ 2] [unknown]

--- 10016210 ns (0.01%), 1 sample
  [ 0] sun.nio.cs.StreamEncoder.implWrite_[j]
  [ 1] sun.nio.cs.StreamEncoder.write_[j]
  [ 2] java.io.OutputStreamWriter.write_[j]
  [ 3] java.io.BufferedWriter.flushBuffer_[j]
  [ 4] java.io.PrintStream.newLine_[j]
  [ 5] java.io.PrintStream.println_[j]
  [ 6] com.comitative.pt.MainKt.main_[j]
  [ 7] com.comitative.pt.MainKt.main_[j]

--- 10014914 ns (0.01%), 1 sample
  [ 0] PhiResolverState::reset(int)
  [ 1] LIRGenerator::move_to_phi(ValueStack*)
  [ 2] LIRGenerator::do_Goto(Goto*)
  [ 3] non-virtual thunk to LIRGenerator::block_do(BlockBegin*)
  [ 4] BlockList::iterate_forward(BlockClosure*)
  [ 5] Compilation::emit_lir()
  [ 6] Compilation::compile_java_method()
  [ 7] Compilation::compile_method()
  [ 8] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*)
  [ 9] Compiler::compile_method(ciEnv*, ciMethod*, int)
  [10] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [11] CompileBroker::compiler_thread_loop()
  [12] JavaThread::thread_main_inner()
  [13] JavaThread::run()
  [14] java_start(Thread*)
  [15] start_thread

--- 10013983 ns (0.01%), 1 sample
  [ 0] ValueMap::find_insert(Instruction*)
  [ 1] GraphBuilder::append_with_bci(Instruction*, int)
  [ 2] GraphBuilder::access_field(Bytecodes::Code)
  [ 3] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 4] GraphBuilder::iterate_all_blocks(bool)
  [ 5] GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) [clone .part.0]
  [ 6] GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)
  [ 7] GraphBuilder::invoke(Bytecodes::Code)
  [ 8] GraphBuilder::iterate_bytecodes_for_block(int)
  [ 9] GraphBuilder::iterate_all_blocks(bool)
  [10] GraphBuilder::GraphBuilder(Compilation*, IRScope*)
  [11] IR::IR(Compilation*, ciMethod*, int)
  [12] Compilation::build_hir() [clone .part.0]
  [13] Compilation::compile_java_method()
  [14] Compilation::compile_method()
  [15] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*)
  [16] Compiler::compile_method(ciEnv*, ciMethod*, int)
  [17] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [18] CompileBroker::compiler_thread_loop()
  [19] JavaThread::thread_main_inner()
  [20] JavaThread::run()
  [21] java_start(Thread*)
  [22] start_thread

--- 10012278 ns (0.01%), 1 sample
  [ 0] com.comitative.pt.Matrix.getElement_[j]
  [ 1] com.comitative.pt.Transform.matrixToPoint_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 10012018 ns (0.01%), 1 sample
  [ 0] rmqueue_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_nodemask_[k]
  [ 3] alloc_pages_vma_[k]
  [ 4] do_anonymous_page_[k]
  [ 5] __handle_mm_fault_[k]
  [ 6] handle_mm_fault_[k]
  [ 7] do_user_addr_fault_[k]
  [ 8] exc_page_fault_[k]
  [ 9] asm_exc_page_fault_[k]
  [10] com.comitative.pt.Matrix.getElement_[j]
  [11] com.comitative.pt.Transform.matrixToPoint_[j]
  [12] com.comitative.pt.Transform.transform_[j]
  [13] com.comitative.pt.MainKt.main_[j]
  [14] com.comitative.pt.MainKt.main_[j]

--- 10010345 ns (0.01%), 1 sample
  [ 0] __prepare_exit_to_usermode_[k]
  [ 1] __noinstr_text_start_[k]
  [ 2] idtentry_exit_cond_rcu_[k]
  [ 3] common_interrupt_[k]
  [ 4] asm_common_interrupt_[k]
  [ 5] com.comitative.pt.Point.length_[j]
  [ 6] com.comitative.pt.MainKt.main_[j]
  [ 7] com.comitative.pt.MainKt.main_[j]

--- 10008767 ns (0.01%), 1 sample
  [ 0] kotlin.random.XorWowRandom.nextInt_[j]
  [ 1] kotlin.random.XorWowRandom.nextBits_[j]
  [ 2] kotlin.random.Random.nextDouble_[j]
  [ 3] kotlin.random.Random.nextDouble_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]
  [ 5] com.comitative.pt.MainKt.main_[j]

--- 10007389 ns (0.01%), 1 sample
  [ 0] __radix_tree_lookup_[k]
  [ 1] radix_tree_lookup_[k]
  [ 2] idr_find_[k]
  [ 3] shrink_slab_[k]
  [ 4] shrink_node_[k]
  [ 5] do_try_to_free_pages_[k]
  [ 6] try_to_free_pages_[k]
  [ 7] __alloc_pages_slowpath.constprop.0_[k]
  [ 8] __alloc_pages_nodemask_[k]
  [ 9] alloc_pages_vma_[k]
  [10] do_anonymous_page_[k]
  [11] __handle_mm_fault_[k]
  [12] handle_mm_fault_[k]
  [13] do_user_addr_fault_[k]
  [14] exc_page_fault_[k]
  [15] asm_exc_page_fault_[k]
  [16] com.comitative.pt.Matrix.getElement_[j]
  [17] com.comitative.pt.Transform.matrixToPoint_[j]
  [18] com.comitative.pt.Transform.transform_[j]
  [19] com.comitative.pt.MainKt.main_[j]
  [20] com.comitative.pt.MainKt.main_[j]

--- 10006374 ns (0.01%), 1 sample
  [ 0] __next_zones_zonelist_[k]
  [ 1] __alloc_pages_nodemask_[k]
  [ 2] alloc_pages_vma_[k]
  [ 3] do_anonymous_page_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] com.comitative.pt.Transform.pointToMatrix_[j]
  [10] com.comitative.pt.Transform.transform_[j]
  [11] com.comitative.pt.MainKt.main_[j]
  [12] com.comitative.pt.MainKt.main_[j]

--- 10005917 ns (0.01%), 1 sample
  [ 0] com.comitative.pt.Matrix.<init>_[j]
  [ 1] com.comitative.pt.Matrix.multiply_[j]
  [ 2] com.comitative.pt.Transform.transform_[j]
  [ 3] com.comitative.pt.MainKt.main_[j]
  [ 4] com.comitative.pt.MainKt.main_[j]

--- 10005855 ns (0.01%), 1 sample
  [ 0] __softirqentry_text_start_[k]
  [ 1] asm_call_sysvec_on_stack_[k]
  [ 2] do_softirq_own_stack_[k]
  [ 3] irq_exit_rcu_[k]
  [ 4] sysvec_apic_timer_interrupt_[k]
  [ 5] asm_sysvec_apic_timer_interrupt_[k]
  [ 6] com.comitative.pt.MainKt.main_[j]
  [ 7] com.comitative.pt.MainKt.main_[j]

--- 10004755 ns (0.01%), 1 sample
  [ 0] java.net.URL.<init>_[j]
  [ 1] java.net.URL.<init>_[j]
  [ 2] sun.misc.URLClassPath$FileLoader.getResource_[j]
  [ 3] sun.misc.URLClassPath.getResource_[j]
  [ 4] java.net.URLClassLoader$1.run_[j]
  [ 5] java.net.URLClassLoader$1.run_[j]
  [ 6] java.security.AccessController.doPrivileged_[j]
  [ 7] java.net.URLClassLoader.findClass_[j]
  [ 8] java.lang.ClassLoader.loadClass_[j]
  [ 9] sun.misc.Launcher$AppClassLoader.loadClass_[j]
  [10] java.lang.ClassLoader.loadClass_[j]
  [11] java.lang.ClassLoader.defineClass1_[j]
  [12] java.lang.ClassLoader.defineClass_[j]
  [13] java.security.SecureClassLoader.defineClass_[j]
  [14] java.net.URLClassLoader.defineClass_[j]
  [15] java.net.URLClassLoader.access$100_[j]
  [16] java.net.URLClassLoader$1.run_[j]
  [17] java.net.URLClassLoader$1.run_[j]
  [18] java.security.AccessController.doPrivileged_[j]
  [19] java.net.URLClassLoader.findClass_[j]
  [20] java.lang.ClassLoader.loadClass_[j]
  [21] sun.misc.Launcher$AppClassLoader.loadClass_[j]
  [22] java.lang.ClassLoader.loadClass_[j]
  [23] kotlin.internal.PlatformImplementationsKt.getJavaVersion_[j]
  [24] kotlin.internal.PlatformImplementationsKt.<clinit>_[j]
  [25] kotlin.random.Random.<clinit>_[j]
  [26] kotlin.random.RandomKt.Random_[j]
  [27] com.comitative.pt.MainKt.main_[j]
  [28] com.comitative.pt.MainKt.main_[j]

--- 10004250 ns (0.01%), 1 sample
  [ 0] handle_mm_fault_[k]
  [ 1] do_user_addr_fault_[k]
  [ 2] exc_page_fault_[k]
  [ 3] asm_exc_page_fault_[k]
  [ 4] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 5] com.comitative.pt.Transform.transform_[j]
  [ 6] com.comitative.pt.MainKt.main_[j]
  [ 7] com.comitative.pt.MainKt.main_[j]

--- 10004121 ns (0.01%), 1 sample
  [ 0] mem_cgroup_charge_[k]
  [ 1] do_anonymous_page_[k]
  [ 2] __handle_mm_fault_[k]
  [ 3] handle_mm_fault_[k]
  [ 4] do_user_addr_fault_[k]
  [ 5] exc_page_fault_[k]
  [ 6] asm_exc_page_fault_[k]
  [ 7] com.comitative.pt.Matrix.getElement_[j]
  [ 8] com.comitative.pt.Transform.matrixToPoint_[j]
  [ 9] com.comitative.pt.Transform.transform_[j]
  [10] com.comitative.pt.MainKt.main_[j]
  [11] com.comitative.pt.MainKt.main_[j]

--- 10003965 ns (0.01%), 1 sample
  [ 0] Label::patch_instructions(MacroAssembler*)
  [ 1] CounterOverflowStub::emit_code(LIR_Assembler*)
  [ 2] LIR_Assembler::emit_slow_case_stubs()
  [ 3] Compilation::emit_code_body()
  [ 4] Compilation::compile_java_method()
  [ 5] Compilation::compile_method()
  [ 6] Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*)
  [ 7] Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] start_thread

--- 10003306 ns (0.01%), 1 sample
  [ 0] __alloc_pages_nodemask_[k]
  [ 1] alloc_pages_vma_[k]
  [ 2] do_anonymous_page_[k]
  [ 3] __handle_mm_fault_[k]
  [ 4] handle_mm_fault_[k]
  [ 5] do_user_addr_fault_[k]
  [ 6] exc_page_fault_[k]
  [ 7] asm_exc_page_fault_[k]
  [ 8] com.comitative.pt.MainKt.main_[j]
  [ 9] com.comitative.pt.MainKt.main_[j]

--- 10003232 ns (0.01%), 1 sample
  [ 0] __softirqentry_text_start_[k]
  [ 1] asm_call_sysvec_on_stack_[k]
  [ 2] do_softirq_own_stack_[k]
  [ 3] irq_exit_rcu_[k]
  [ 4] sysvec_apic_timer_interrupt_[k]
  [ 5] asm_sysvec_apic_timer_interrupt_[k]
  [ 6] com.comitative.pt.Matrix.setElement_[j]
  [ 7] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 8] com.comitative.pt.Transform.transform_[j]
  [ 9] com.comitative.pt.MainKt.main_[j]
  [10] com.comitative.pt.MainKt.main_[j]

--- 10003082 ns (0.01%), 1 sample
  [ 0] cgroup_throttle_swaprate_[k]
  [ 1] do_anonymous_page_[k]
  [ 2] __handle_mm_fault_[k]
  [ 3] handle_mm_fault_[k]
  [ 4] do_user_addr_fault_[k]
  [ 5] exc_page_fault_[k]
  [ 6] asm_exc_page_fault_[k]
  [ 7] com.comitative.pt.Transform.pointToMatrix_[j]
  [ 8] com.comitative.pt.Transform.transform_[j]
  [ 9] com.comitative.pt.MainKt.main_[j]
  [10] com.comitative.pt.MainKt.main_[j]

          ns  percent  samples  top
  ----------  -------  -------  ---
 52322194795   59.97%     5232  com.comitative.pt.Matrix.multiply_[j]
 10000395944   11.46%     1000  com.comitative.pt.Matrix.getElement_[j]
  8420496037    9.65%      842  com.comitative.pt.MainKt.main_[j]
  4030366255    4.62%      403  com.comitative.pt.Transform.matrixToPoint_[j]
  3300186683    3.78%      330  java.lang.Double.equals_[j]
  1810061398    2.07%      181  com.comitative.pt.Point.length_[j]
  1280065848    1.47%      128  com.comitative.pt.Transform.pointToMatrix_[j]
  1070058700    1.23%      107  com.comitative.pt.Matrix.setElement_[j]
  1060074794    1.22%      106  kotlin.random.RandomKt.takeUpperBits_[j]
   950021248    1.09%       95  java.lang.Double.<init>_[j]
   510056727    0.58%       51  com.comitative.pt.Matrix.<init>_[j]
   449997690    0.52%       45  com.comitative.pt.Transform.transform_[j]
   400016283    0.46%       40  java.lang.Object.<init>_[j]
   201602356    0.23%       20  SpinPause
   200021676    0.23%       20  java.lang.Double.valueOf_[j]
   110566552    0.13%       11  __lock_text_start_[k]
    99993916    0.11%       10  do_user_addr_fault_[k]
    90726080    0.10%        9  ParallelTaskTerminator::offer_termination(TerminatorTerminator*)
    90335442    0.10%        9  StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, BasicHashtable<(MemoryType)9>::BucketUnlinkContext*)
    80566116    0.09%        8  CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int)
    80024449    0.09%        8  clear_page_erms_[k]
    40323390    0.05%        4  ObjectStartArray::object_starts_in_range(HeapWord*, HeapWord*) const
    30247982    0.03%        3  PSScavengeKlassClosure::do_klass(Klass*)
    30224595    0.03%        3  futex_wait_[k]
    30106734    0.03%        3  __prepare_exit_to_usermode_[k]
    30010578    0.03%        3  kotlin.random.XorWowRandom.nextInt_[j]
    20154578    0.02%        2  do_syscall_64_[k]
    20037305    0.02%        2  /usr/lib/x86_64-linux-gnu/libc-2.31.so
    20009087    0.02%        2  __softirqentry_text_start_[k]
    20003396    0.02%        2  PhaseIdealLoop::is_dominator(Node*, Node*) [clone .part.0]
    19996995    0.02%        2  cgroup_throttle_swaprate_[k]
    10263454    0.01%        1  MutableSpaceUsedHelper::take_sample()
    10260710    0.01%        1  clock_gettime
    10099258    0.01%        1  Monitor::IUnlock(bool)
    10088116    0.01%        1  os::PlatformEvent::park()
    10082541    0.01%        1  finish_task_switch_[k]
    10080403    0.01%        1  __pthread_cond_wait
    10079177    0.01%        1  InstanceKlass::oop_push_contents(PSPromotionManager*, oopDesc*)
    10078344    0.01%        1  __pthread_cond_signal
    10066804    0.01%        1  pthread_mutex_lock
    10036649    0.01%        1  ciObjectFactory::get_symbol(Symbol*)
    10021117    0.01%        1  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
    10021077    0.01%        1  stringStream::write(char const*, unsigned long)
    10017668    0.01%        1  LIR_List::metadata2reg(Metadata*, LIR_OprDesc*)
    10017070    0.01%        1  Threads::nmethods_do(CodeBlobClosure*)
    10016210    0.01%        1  sun.nio.cs.StreamEncoder.implWrite_[j]
    10014914    0.01%        1  PhiResolverState::reset(int)
    10013983    0.01%        1  ValueMap::find_insert(Instruction*)
    10012018    0.01%        1  rmqueue_[k]
    10007389    0.01%        1  __radix_tree_lookup_[k]
    10006374    0.01%        1  __next_zones_zonelist_[k]
    10004755    0.01%        1  java.net.URL.<init>_[j]
    10004250    0.01%        1  handle_mm_fault_[k]
    10004121    0.01%        1  mem_cgroup_charge_[k]
    10003965    0.01%        1  Label::patch_instructions(MacroAssembler*)
    10003306    0.01%        1  __alloc_pages_nodemask_[k]
    10002950    0.01%        1  pmd_page_vaddr_[k]
    10002857    0.01%        1  java.io.Writer.write_[j]
    10002608    0.01%        1  down_read_trylock_[k]
    10002288    0.01%        1  java.lang.String.valueOf_[j]
    10001754    0.01%        1  try_charge_[k]
    10001632    0.01%        1  lru_cache_add_[k]
    10001588    0.01%        1  CodeHeap::find_start(void*) const
    10001207    0.01%        1  kotlin.random.XorWowRandom.nextBits_[j]
    10001111    0.01%        1  CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long)
    10000704    0.01%        1  IndexSetIterator::advance_and_next()
    10000570    0.01%        1  ParallelScavengeHeap::can_elide_tlab_store_barriers() const
     9999690    0.01%        1  PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&, int, Node*)
     9999659    0.01%        1  _cond_resched_[k]
     9998313    0.01%        1  __handle_mm_fault_[k]
     9998263    0.01%        1  __mod_lruvec_state_[k]
     9997769    0.01%        1  mem_cgroup_from_task_[k]
     9997228    0.01%        1  java.util.Arrays.copyOf_[j]
